// Generated by CoffeeScript 1.3.3
(function() {
  var Queue, addKeyPrefix, objectDiff, objectDiffObject, union;

  union = require('underscore').union;

  objectDiff = function(object1, object2) {
    var deletedPaths, key, updatedPaths, value;
    updatedPaths = (function() {
      var _results;
      _results = [];
      for (key in object2) {
        value = object2[key];
        if (object1[key] !== value) {
          _results.push(key);
        }
      }
      return _results;
    })();
    deletedPaths = (function() {
      var _results;
      _results = [];
      for (key in object1) {
        value = object1[key];
        if (object2[key] === void 0) {
          _results.push(key);
        }
      }
      return _results;
    })();
    return union(updatedPaths, deletedPaths);
  };

  objectDiffObject = function(object1, object2) {
    var diffObj, key, _i, _len, _ref;
    diffObj = {};
    _ref = objectDiff(object1, object2);
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      key = _ref[_i];
      diffObj[key] = object2[key];
    }
    return diffObj;
  };

  addKeyPrefix = function(object, prefix) {
    var key, value, _results;
    _results = [];
    for (key in object) {
      value = object[key];
      delete object[key];
      _results.push(object[prefix + key] = value);
    }
    return _results;
  };

  Queue = (function() {

    function Queue() {
      this.data = [];
    }

    Queue.prototype.push = function(value) {
      return this.data.push(value);
    };

    Queue.prototype.pop = function() {
      return this.data.shift();
    };

    return Queue;

  })();

  module.exports = {
    objectDiff: objectDiff,
    objectDiffObject: objectDiffObject,
    addKeyPrefix: addKeyPrefix,
    Queue: Queue
  };

}).call(this);
