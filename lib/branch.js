// Generated by CoffeeScript 1.3.3
(function() {
  var Branch, async, _;

  async = require('async');

  _ = require('underscore');

  Branch = (function() {

    function Branch(repo, head) {
      this.repo = repo;
      this.head = head;
    }

    Branch.prototype.commit = function(data) {
      return this.head = this.repo.commit(this.head, data);
    };

    Branch.prototype.treeAtPath = function(path, cb) {
      return this.repo.treeAtPath(this.head, path, cb);
    };

    Branch.prototype.dataAtPath = function(path) {
      return this.repo.dataAtPath(this.head, path);
    };

    Branch.prototype.commonCommit = function(branch) {
      return this.repo.commonCommit(this.head, branch.head);
    };

    Branch.prototype.diff = function(branch) {
      return this.repo.diff(this.head, branch.head);
    };

    Branch.prototype.patchHashs = function(_arg) {
      var from, to;
      from = _arg.from, to = _arg.to;
      to = to !== void 0 ? to : this.head;
      from = from !== void 0 ? from : this.head;
      return this.repo.patchHashs({
        from: from,
        to: to
      });
    };

    Branch.prototype.patch = function(_arg) {
      var from, to;
      from = _arg.from, to = _arg.to;
      to = to !== void 0 ? to : this.head;
      from = from !== void 0 ? from : this.head;
      return this.repo.patch({
        from: from,
        to: to
      });
    };

    Branch.prototype.merge = function(_arg, cb) {
      var branch, obj, strategy;
      branch = _arg.branch, strategy = _arg.strategy;
      obj = this;
      return this.repo.merge(this.head, branch.head, strategy, function(err, head) {
        obj.head = head;
        return cb(null, head);
      });
    };

    return Branch;

  })();

  module.exports = Branch;

}).call(this);
